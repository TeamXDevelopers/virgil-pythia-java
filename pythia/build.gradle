/*
 * Copyright (c) 2015-2020, Virgil Security, Inc.
 *
 * Lead Maintainer: Virgil Security Inc. <support@virgilsecurity.com>
 *
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *     (1) Redistributions of source code must retain the above copyright notice, this
 *     list of conditions and the following disclaimer.
 *
 *     (2) Redistributions in binary form must reproduce the above copyright notice,
 *     this list of conditions and the following disclaimer in the documentation
 *     and/or other materials provided with the distribution.
 *
 *     (3) Neither the name of virgil nor the names of its
 *     contributors may be used to endorse or promote products derived from
 *     this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
//    id 'signing'
//    id 'maven'
}

sourceCompatibility = 1.8

group 'com.virgilsecurity'

dependencies {
    // Virgil SDK
    api "com.virgilsecurity.sdk:sdk:$versions.virgilSdk"

    // Virgil Crypto
    api "com.virgilsecurity.crypto:pythia:$versions.virgilCrypto"

    // Http
    implementation "com.google.code.gson:gson:$versions.gson"
    implementation "com.github.kittinunf.fuel:fuel:$versions.fuel"

    // Test
    testImplementation "org.junit.jupiter:junit-jupiter:$versions.junit"
    testImplementation "commons-lang:commons-lang:$versions.commonsLang"
    testImplementation "commons-codec:commons-codec:$versions.commonsCodec"
    testImplementation "org.mockito:mockito-core:$versions.mockito"
    testImplementation "org.mockito:mockito-junit-jupiter:$versions.mockito"

    testImplementation "com.virgilsecurity:test-common:0.1"
}

test {
    useJUnitPlatform()
    systemProperties = System.properties
}

sourceSets.main.java.srcDirs = ["${buildDir}/generated/", "src/main/java"]

task generateVirgilInfo(type: Copy) {
    from('src/main/templates') {
        include '**/*.java'
    }
    into "$buildDir/generated"
    expand(version: "$project.version")
    includeEmptyDirs = false
}

compileJava.dependsOn(generateVirgilInfo)

task sourcesJar(type: Jar) {
    from(sourceSets["main"].allSource)
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from "$buildDir/javadoc"
    classifier = 'javadoc'
}

def authentication_username = hasProperty('authentication_username') ? authentication_username : System.getenv('authentication_username')
def authentication_password = hasProperty('authentication_password') ? authentication_password : System.getenv('authentication_password')

//publishing {
//    publications {
//        mavenJava(MavenPublication) {
//            artifactId = 'pythia'
//            from components.java
//            artifact sourcesJar
//            artifact javadocJar
//
//            pom {
//                name = 'Virgil Pythia Java SDK'
//                description = 'Virgil Security provides an SDK which allows you to communicate with Virgil Pythia Service.'
//                url = 'https://www.virgilsecurity.com/'
//                licenses {
//                    license {
//                        name = 'Virgil Security, Inc. license'
//                        url = 'https://github.com/VirgilSecurity/virgil-pythia-kotlin/blob/master/LICENSE.txt'
//                    }
//                }
//                developers {
//                    developer {
//                        id = 'andrii-iakovenko'
//                        name = 'Andrii Iakovenko'
//                        email = 'andrii-iakovenko@gmail.com'
//                        organizationUrl = 'https://github.com/andrii-iakovenko'
//                    }
//                    developer {
//                        id = 'BuddahLD'
//                        name = 'Danylo Oliinyk'
//                        email = 'danylo.oliinyk@gmail.com'
//                        organizationUrl = 'https://github.com/buddahld'
//                    }
//                }
//                scm {
//                    connection = 'scm:git:https://github.com/VirgilSecurity/virgil-pythia-kotlin.git'
//                    developerConnection = 'scm:git:git@github.com:VirgilSecurity/virgil-pythia-kotlin.git'
//                    url = 'https://github.com/VirgilSecurity/virgil-pythia-kotlin'
//                }
//            }
//        }
//    }
//    repositories {
//        maven {
//            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
//            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
//            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
//            credentials {
//                username "${authentication_username}"
//                password "${authentication_password}"
//            }
//        }
//    }
//}

//signing {
//    sign publishing.publications.mavenJava
//}

afterEvaluate {
    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = 'pythia'
                from components.java
                artifact sourcesJar
                artifact javadocJar
            }
        }
    }
}